// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel[0..1]=address[12..13],
    a=loadRAM0, b=loadRAM1, c=loadRAM2, d=loadRAM3);
    RAM4K(in[0..15]=in[0..15], load=loadRAM0, address[0..11]=address[0..11], out[0..15]=RAM0out);
    RAM4K(in[0..15]=in[0..15], load=loadRAM1, address[0..11]=address[0..11], out[0..15]=RAM1out);
    RAM4K(in[0..15]=in[0..15], load=loadRAM2, address[0..11]=address[0..11], out[0..15]=RAM2out);
    RAM4K(in[0..15]=in[0..15], load=loadRAM3, address[0..11]=address[0..11], out[0..15]=RAM3out);
    Mux4Way16(sel[0..1]=address[12..13],
    a[0..15]=RAM0out, b[0..15]=RAM1out,
    c[0..15]=RAM2out, d[0..15]=RAM3out, out[0..15]=out[0..15]);
}