// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0..2]=address[6..8],
    a=loadRAM0, b=loadRAM1, c=loadRAM2, d=loadRAM3,
    e=loadRAM4, f=loadRAM5, g=loadRAM6, h=loadRAM7);
    RAM64(in[0..15]=in[0..15], load=loadRAM0, address[0..5]=address[0..5], out[0..15]=RAM0out);
    RAM64(in[0..15]=in[0..15], load=loadRAM1, address[0..5]=address[0..5], out[0..15]=RAM1out);
    RAM64(in[0..15]=in[0..15], load=loadRAM2, address[0..5]=address[0..5], out[0..15]=RAM2out);
    RAM64(in[0..15]=in[0..15], load=loadRAM3, address[0..5]=address[0..5], out[0..15]=RAM3out);
    RAM64(in[0..15]=in[0..15], load=loadRAM4, address[0..5]=address[0..5], out[0..15]=RAM4out);
    RAM64(in[0..15]=in[0..15], load=loadRAM5, address[0..5]=address[0..5], out[0..15]=RAM5out);
    RAM64(in[0..15]=in[0..15], load=loadRAM6, address[0..5]=address[0..5], out[0..15]=RAM6out);
    RAM64(in[0..15]=in[0..15], load=loadRAM7, address[0..5]=address[0..5], out[0..15]=RAM7out);
    Mux8Way16(sel[0..2]=address[6..8],
    a[0..15]=RAM0out, b[0..15]=RAM1out,
    c[0..15]=RAM2out, d[0..15]=RAM3out,
    e[0..15]=RAM4out, f[0..15]=RAM5out,
    g[0..15]=RAM6out, h[0..15]=RAM7out, out[0..15]=out[0..15]);
}